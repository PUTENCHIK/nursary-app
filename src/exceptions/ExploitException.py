from src.exceptions.MyHTTPException import MyHTTPException


class ExploitException(MyHTTPException):
    @staticmethod
    def no_exploit(collar_id: int, dog_id: int):
        return ExploitException.http(
            code=404,
            detail=f"No exploit: dog_id '{dog_id}' and collar_id '{collar_id}'"
        )

    @staticmethod
    def no_both_ids():
        return ExploitException.http(
            code=404,
            detail="Must be gotten either collar_id or dog_id"
        )

    @staticmethod
    def already_link(collar_id: int, dog_id: int):
        return ExploitException.http(
            code=404,
            detail=f"Dog with id '{dog_id}' and collar with id '{collar_id}' already linked"
        )

    @staticmethod
    def collar_already_linked(collar_id: int, dog_id: int):
        return ExploitException.http(
            code=404,
            detail=f"Collar with id '{collar_id}' has already linked with dog: id='{dog_id}'"
        )

    @staticmethod
    def dog_already_linked(dog_id: int, collar_id: int):
        return ExploitException.http(
            code=404,
            detail=f"Dog with id '{dog_id}' has already linked with collar: id='{collar_id}'"
        )

