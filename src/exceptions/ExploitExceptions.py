from src.exceptions.MyHTTPException import MyHTTPException


class NoExploit(MyHTTPException):
    def __init__(self, collar_id: int, dog_id: int):
        detail = f"No exploit: dog_id '{dog_id}' and collar_id '{collar_id}'"
        super(NoExploit, self).__init__(detail)


class NoBothIds(MyHTTPException):
    def __init__(self):
        detail = "Must be gotten either collar_id or dog_id"
        super(NoBothIds, self).__init__(detail)


class AlreadyLinked(MyHTTPException):
    def __init__(self, collar_id: int, dog_id: int):
        detail = f"Dog with id '{dog_id}' and collar with id '{collar_id}' already linked"
        super(AlreadyLinked, self).__init__(detail)


class CollarAlreadyLinked(MyHTTPException):
    def __init__(self, collar_id: int, dog_id: int):
        detail = f"Collar with id '{collar_id}' has already linked with dog: id='{dog_id}'"
        super(CollarAlreadyLinked, self).__init__(detail)


class DogAlreadyLinked(MyHTTPException):
    def __init__(self, collar_id: int, dog_id: int):
        detail = f"Dog with id '{dog_id}' has already linked with collar: id='{collar_id}'"
        super(DogAlreadyLinked, self).__init__(detail)
